ep14:
SELECT name FROM items WHERE name LIKE '_ boxes of frogs'
SELECT name FROM items WHERE name LIKE '% boxes of frogs'

SELECT seller_id FROM items ORDER BY seller_id 

ep15:
SELECT name FROM items where name REGEXP 'new'
SELECT name FROM items where name REGEXP '[12345] boxes of frog'
SELECT name FROM items where name REGEXP '[^12345] boxes of frog'
^=not

ep16:
SELECT CONCAT(city, ', ', state) FROM customers
#gabungan 2 column

SELECT CONCAT(city, ', ', state) AS new_address FROM customers
#nak bagi nama dekat column

SELECT name, cost, cost-1 AS sale_price FROM items
#buat column baru nilai dia tolak 1

ep17:
SELECT name, UPPER(name) FROM customers
#buat column baru yang uppercase

SELECT cost, SQRT(cost) FROM items
#ade function SQRT(COST)

SELECT AVG(cost) FROM items
#ni untuk kira average dkt cost

SUM()

ep18:
SELECT COUNT(name) FROM items
SELECT COUNT(name) FROM items WHERE seller_id=6
SELECT AVG(cost) FROM items WHERE seller_id=6
====
SELECT COUNT(*) AS item_count,
MAX(cost) AS max,
AVG(cost) AS avg
FROM items WHERE seller_id=12
===

ep19:
SELECT seller_id, COUNT(*) AS item_count FROM items WHERE seller_id=2

SELECT seller_id, COUNT(*) AS item_count FROM items GROUP BY seller_id
#ni untuk display semua seller_id, tak perlu tukar nombor 2 3 4..

SELECT seller_id, COUNT(*) AS item_count FROM items GROUP BY seller_id HAVING COUNT(*)>=3

k#awan GROUP adalah HAVING

SELECT seller_id, COUNT(*) AS item_count FROM items GROUP BY seller_id HAVING COUNT(*)>=3 ORDER BY item_count DESC
#nak bagi dia susun

ep20:
SELECT AVG(cost) FROM items
#DAPAT KAN AVG COST

====
SELECT name, cost FROM items WHERE cost>(

SELECT AVG(cost) FROM items

) ORDER by cost DESC
===

ep21:
SELECT seller_id, name FROM items WHERE name LIKE'%boxes of frogs'
#nak carik siapa jual boxes of frogs

====
SELECT name, MIN(cost) FROM items WHERE name LIKE'%boxes of frogs' AND seller_id IN(

SELECT seller_id FROM items WHERE name LIKE'%boxes of frogs'

)
===
#nak carik siapa jual boxes of frogs yang harga palingmurah

ep22:
====
SELECT customers.id, customers.name, items.name, items.cost
FROM customers, items
WHERE customers.id=seller_id
ORDER BY customers.id
===
# dia nak gabung kan dua table dengan column id yang sama nama(gabung customers dgn items table)

ep23:
====
SELECT i.seller_id, i.name, c.id
FROM customers AS c, items AS i
WHERE i.seller_id=c.id
===
#nak bagi nickname

====
SELECT customers.name, items.name
FROM customers LEFT OUTER JOIN items
ON customers.id=seller_id
===
#OUTER JOIN(https://www.youtube.com/watch?v=cXQOSQo_RDI&index=23&list=PL32BC9C878BA72085)

ep24:
====
SELECT name, cost, bids FROM items WHERE bids>190
UNION
SELECT name, cost, bids FROM items WHERE cost>1000
===
#UNION
#remove duplicate entry

====
SELECT name, cost, bids FROM items WHERE bids>190
UNION ALL
SELECT name, cost, bids FROM items WHERE cost>1000
===
#UNION. Display all duplicate entry

ep25:
SELECT name, cost FROM items WHERE Match(name) Against('baby')
#search full text name

====
SELECT name, cost FROM items WHERE Match(name) Against('+baby -coat' IN BOOLEAN MODE)
===
#NO BABY COAT SEARCH tapi baby lain ada

ep26:
INSERT INTO items VALUES('101','karipap','4','2','0')

INSERT INTO items(id,name,cost,seller_id,bids) VALUES('102','nasi lemak','5.20','1','0')
#ni cara bagus

INSERT INTO items(id,name,cost,seller_id) VALUES('103','donat','6.20','1')

ep27:
====
INSERT INTO items(id,name,cost,seller_id,bids) VALUES
('104','burger ayam','9.30','1','0'),
('105','donat itik','16.20','1','0'),
('106','ayam madu','21.20','1','0')
===
#insert multiple data

====
INSERT INTO items(id,name,cost,seller_id,bids) SELECT id, name, cost, seller_id, bids FROM faketable
===
#merge table, tapi tak disarankan.jangan buat

ep28:

UPDATE items SET name='ayam serama' WHERE id=106
#update data

DELETE FROM items WHERE id=104
#delete data

ep29:
====
CREATE TABLE users(

id int,
username varchar(30),
password varchar(20),
PRIMARY KEY(id)
)
===
#buat table baru

ep30:

addresstwo varchar(30) NOT NULL
id int NOT NULL AUTO_INCREMENT

====
CREATE TABLE makanan(
id int NOT NULL AUTO_INCREMENT,
username varchar(30) NOT NULL,
password vatchar(20) NOT NULL,
PRIMARY KEY(id)
)
===
#create table yang ada auto increment dkt primary key

ep31:

ALTER TABLE makanan ADD samplecolumn varchar(10)
#add column dekat table makanan

ALTER TABLE makanan DROP samplecolumn
#remove column

DROP TABLE makanan
#delete table

RENAME TABLE customers TO users2
#tukar nama table

ep32:

SELECT id, name, bids FROM items ORDER BY bids DESC LIMIT 10
#top 10 most bids item

====
CREATE VIEW mostbids AS
SELECT id, name, bids FROM items ORDER BY bids DESC LIMIT 10
===
#ada file baru nama mostbids, dia keluar top 10 most bids

SELECT Concat(city,', ',state) AS address FROM customers

CREATE VIEW mailing AS
SELECT Concat(city,', ',state) AS address FROM customers

ep33:
Finish. sentiasa buat backup

feedback:
Akim Tulaganov
1 year ago
I am already lost. We have to work with several tables combining them using JOIN operators the most and they are huge. Syntax is rather simple but the logic is not(for me at least). I wish I had a mentor/supervisor like Bucky at work.But you don't get discoureged, you may handle way better than me! :Dï»¿ 
